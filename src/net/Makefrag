OBJDIRS     += net
NETSRC  := net_utils.cc exec_protocol.cc client.cc server.cc
NETOBJ := $(patsubst %.cc,$(OBJDIR)/net/%.o,$(NETSRC))

DEMO_SRC := protocol_tester.cc
DEMO_OBJ := $(patsubst %.cc,$(OBJDIR)/net/%.o,$(DEMO_SRC))

all:    $(OBJDIR)/libnet.so
$(OBJDIR)/libnet.so: $(patsubst %.cc,$(OBJDIR)/net/%.o,$(NETSRC))
	$(CXX) -shared -o $@ $^ $(LDFLAGS) -lgmp -lgmpxx -lcrypto

all:	$(OBJDIR)/net/client

$(OBJDIR)/net/client: $(OBJDIR)/net/test_client.o $(DEMO_OBJ) $(PROTO_OBJ) $(OBJDIR)/libmpc.so $(OBJDIR)/libcrypto.so $(OBJDIR)/libtree.so $(OBJDIR)/libprotobuf_defs.so $(OBJDIR)/libnet.so
	$(CXX) $^ -o $@  $(SHAIFHEPATH)/fhe.a $(LDFLAGS) -lmpc -lcrypto -ltree\
	   -Wl,-rpath=$(NTLLIBPATH) -L$(NTLLIBPATH) -lntl -lgmp -lgf2x $(L_BOOST_SYSTEM) $(L_BOOST_THREAD)\
       -lprotobuf -lprotobuf_defs -lnet


all:	$(OBJDIR)/net/server

$(OBJDIR)/net/server: $(OBJDIR)/net/test_server.o $(DEMO_OBJ) $(PROTO_OBJ) $(OBJDIR)/libmpc.so $(OBJDIR)/libcrypto.so $(OBJDIR)/libtree.so $(OBJDIR)/libfhemath.so $(OBJDIR)/libprotobuf_defs.so $(OBJDIR)/libnet.so
	$(CXX) $^ -o $@  $(SHAIFHEPATH)/fhe.a $(LDFLAGS) -lmpc -lcrypto -ltree -lfhemath -lfheutil\
	   -Wl,-rpath=$(NTLLIBPATH) -L$(NTLLIBPATH) -lntl -lgmp -lgf2x $(L_BOOST_SYSTEM) $(L_BOOST_THREAD)\
       -lprotobuf -lprotobuf_defs -lnet

# vim: set noexpandtab:
